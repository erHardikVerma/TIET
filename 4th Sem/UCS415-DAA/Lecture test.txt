Problem 1 : Let p (1 : 3) = (0.5, 0.1, 0.05) q(0 : 3) = (0.15, 0.1, 0.05, 0.05) 
Compute and construct OBST for above values using Dynamic approach.
sol:
https://codecrucks.com/optimal-binary-search-tree-how-to-solve-using-dynamic-programming/


Problem 2 : Construct OBST using Dynamic approach for following :
Key			A	B	C	D
Probablity		0.1   0.2   0.4   0.3
sol:
https://www.youtube.com/watch?v=g20bLO7ZHSs


Problem 3 : Write the reccurrence relation, time complexity and pseudo code for constructing OBST of n nodes using dynamic approach.
sol:
https://codecrucks.com/optimal-binary-search-tree-how-to-solve-using-dynamic-programming/


Problem 4 : An OBST is not necessarily a tree whose overall height is small.
sol: True
( The height of an OBST depends on the probabilities of the keys being searched. 
Therefore, an OBST is not necessarily a tree whose overall height is small. 
In fact, an OBST can have a larger height than other binary search trees that do not minimize the expected search cost. )


Problem 5 : Can we necessarily construct an OBST by always putting the key with the greatest probability at root.
sol: False
( No, we cannot necessarily construct an OBST by always putting the key with the greatest probability at the root. 
To construct an OBST, we start with a sorted list of keys and their probabilities. 
We then build a table that contains the expected search cost for all possible sub-trees of the original list. 
We can use dynamic programming to fill in this table efficiently. Finally, we use this table to construct the OBST.
Therefore, constructing an OBST involves more than just putting the key with the greatest probability at the root. 
We need to consider all possible sub-trees and their expected search costs to construct an OBST. )
